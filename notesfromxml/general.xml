<data>
	<java>
		<notes>
			<annotations>
				<links>
					<link>
						<description></description>
						<url>https://www.javacodegeeks.com/2014/11/java-annotations-tutorial.html</url>
					</link>
				</links>
			</annotations>
			<dependency_injection>
				<definition>Dependency injection simply means receiving collaborators as constructor parameters instead of fetching them ourselves.</definition>
				<link>https://www.objc.io/issues/11-android/dependency-injection-in-java/</link>
			</dependency_injection>
			<java_database_connectivity>
				<definition>Java Database Connectivity (JDBC) is an API for Java which defines how a client may access a database. It provides methods to query and update data in a database, and is oriented towards relational databases.
JDBC connections support creating and executing statements. These may be update statements such as SQL's CREATE, READ UPDATE and DELETE, or they may be query statements such as SELECT. Additionally, stored procedures may be invoked through a JDBC connection.
See examples in link.</definition>
				<link>https://en.wikipedia.org/wiki/Java_Database_Connectivity</link>
			</java_database_connectivity>
		</notes>
		<links>
			<link>
				<description></description>
				<url>https://docs.oracle.com/cd/E19798-01/821-1841/bncgq/index.html</url>
			</link>
			<link>
				<description>A short and concise explaination of what the finally block is in try/catch/finally exception handling in Java.</description>
				<url>https://docs.oracle.com/javase/tutorial/essential/exceptions/finally.html</url>
			</link>
		</links>
	</java>
	<java_servlets>
		<notes>
			<what_is_a_servletcontext>ServletContext is a configuration Object which is created when web application is started. It contains different initialization parameter that can be configured in web.xml.</what_is_a_servletcontext>
			<deployment_descriptor></deployment_descriptor>
			<generic_servlet>GenericServlet is a Java class for implementing servlets in java via extensions. The servlet that is being implemented needs to extend the GenericServlet class and implement a service function that takes in a request and a response (example: public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException {})...</generic_servlet>
			<httpservlet>HTTPServlet is a more advanced version of the GenericServlet. The biggest functional difference is that the HTTPServlet does not need to implement a service function, it has one already. THe HTTPServlet reads the HTTP request and determines if the request is an HTTP GET, POST, PUT, DELETE, HEAD etc. and calls the corresponding method. that corresponding method needs to be implemented in the HTTPServlet class. This is accomplished by overriding a HTTP method like: doGet(), doPost(), doHead(), doPut(), doDelete(), doOptions(), doTrace()...</httpservlet>
		</notes>
		<links>
			<link>
				<description>A comprehensive tutorial on java servlets and how they work.</description>
				<url>http://www.tutorialspoint.com/servlets/servlets_overview.htm</url>
			</link>
			<link>
				<description>A concise tutorial with example for Java servlets.</description>
				<url>http://tutorials.jenkov.com/java-servlets/servlet-example.html</url>
			</link>
			<link>
				<description>An example of how Java servlets should be connected to databases.</description>
				<url>http://www.journaldev.com/1997/servlet-jdbc-database-connection-example</url>
			</link>
			<link>
				<description>Very interesting StackOverflow question which might hold some answers for how to make effective Java Servlet Design Patterns.</description>
				<url>http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications</url>
			</link>
			<link>
				<description>Examples of what the messagelistener is and what it does.</description>
				<url>https://examples.javacodegeeks.com/enterprise-java/jms/jms-messagelistener-example/</url>
			</link>
			<link>
				<description>A person on Stackoverflow that claims to have found a way to have parallel message listeners instead of serial. He has examples in code format.</description>
				<url>http://stackoverflow.com/questions/20298969/concurrent-processing-of-jms-message-listener-weblogic</url>
			</link>
			<link>
				<description>A Stack Overflow question about where the most common java design patterns are used in the Java code itself. The answer is very comprehensive and informative.</description>
				<url>http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns-in-javas-core-libraries?rq=1</url>
			</link>
		</links>
	</java_servlets>
	<mongodb>
		<notes>
			<annotations>
				<annotation>
					<name>@Id</name>
					<purpose>Tells the mapper what property should be used for the MongoDB _id property.</purpose>
				</annotation>
				<annotation>
					<name>@Document</name>
					<purpose>Applied to classes to indicate that they should be mapped to the database. In Mongo, documents are like rows and collections are like tables. A single collection can have multiple documents.</purpose>
				</annotation>
				<annotation>
					<name>@Indexed</name>
					<purpose>Tells the mapping framework to call createIndex(...) on that property in the document.</purpose>
				</annotation>
			</annotations>
		</notes>
		<links>
			<link>
				<description></description>
				<url>https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/</url>
			</link>
			<link>
				<description></description>
				<url>http://docs.spring.io/spring-data/mongodb/docs/current/reference/html/</url>
			</link>
			<link>
				<description>Part 1 of a blog post showing how to think with documents in Mongo rather than RDBMS SQL methodology. Explains somewhat the structure of data in Mongo.</description>
				<url>https://www.mongodb.com/blog/post/thinking-documents-part-1</url>
			</link>
			<link>
				<description>Part 2 of a blog post showing how to think with documents in Mongo rather than RDBMS SQL methodology. Talks about Embedding and Referencing in Mongo instead of the JOIN found in SQL.</description>
				<url>https://www.mongodb.com/blog/post/thinking-documents-part-2</url>
			</link>
			<link>
				<description>Stuff about creating indexed, annotations and converters for MongoDB in Spring.</description>
				<url>http://www.baeldung.com/spring-data-mongodb-index-annotations-converter</url>
			</link>
			<link>
				<description>Tutorials and guides for querying a mongo database straight from the mongo shell instead of using the java driver(the java interface).</description>
				<url>https://docs.mongodb.com/manual/tutorial/query-documents/</url>
			</link>
			<link>
				<description>Another guide to querying data from the mongo shell.</description>
				<url>https://docs.mongodb.com/getting-started/shell/query/</url>
			</link>
			<link>
				<description>A guide to querying a Mongo database with a Java driver.</description>
				<url>https://docs.mongodb.com/getting-started/java/query/</url>
			</link>
		</links>
	</mongodb>
	<spring>
		<notes>
			<annotations>
				<annotation>
					<name>@Autowired</name>
					<purpose>Let Spring auto-wire other beans into your classes using @Autowired annotation.
Spring beans can be wired by name or by type.
1) @Autowire by default is a type driven injection. @Qualifier spring annotation can be used to further fine-tune autowiring.
2) @Resource (javax.annotation.Resource) annotation can be used for wiring by name.
Beans that are themselves defined as a collection or map type cannot be injected through @Autowired, because type matching is not properly applicable to them. Use @Resource for such beans, referring to the specific collection or map bean by unique name.

@Autowired allows you to do a single:
	@Autowired
	public NBIServiceImpl nbiServicePort;

Instead of constantly doing:
	NBIServiceImpl nbiServiceImpl = new NBIServiceImpl(nbiServicePort, env);
Whenever you want to make a new NBIServiceImpl object.
For this to work, the NBIServiceImpl class must have a constructor like so:
    @Inject
    public NBIServiceImpl(NBIServicePort client, Environment env) {
        this.client = client;
        this.env = env;
    }
Why @Inject? I don't know. Some say that there is no difference between @Autowired and @Inject but that has yet to be confirmed.
					</purpose>
					<links>
						<link>
							<description></description>
							<url>http://stackoverflow.com/questions/19414734/understanding-spring-autowired-usage</url>
						</link>
						<link>
							<description></description>
							<url>http://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null?rq=1</url>
						</link>
					</links>
				</annotation>
				<annotation>
					<name>@Configuration</name>
					<purpose>Indicates that a class declares one or more @Bean methods and may be processed by the Spring container to generate bean definitions and service requests for those beans at runtime.
Annotating a class with @Configuration indicates that its primary purpose is to be a source of bean definitions.
When @Bean methods are declared within classes that are not annotated with @Configuration they are referred to as being processed in a 'lite' mode. For example, bean methods declared in a @Component or even in a plain old class will be considered 'lite'. Unlike full @Configuration, lite @Bean methods cannot easily declare inter-bean dependencies. Usually one @Bean method should not invoke another @Bean method when operating in 'lite' mode. Only using @Bean methods within @Configuration classes is a recommended approach of ensuring that 'full' mode is always used. This will prevent the same @Bean method from accidentally being invoked multiple times and helps to reduce subtle bugs that can be hard to track down when operating in 'lite' mode.
					</purpose>
				</annotation>
				<annotation>
					<name>@Service</name>
					<purpose>Indicates that an annotated class is a "Service" (e.g. a business service facade).
This annotation serves as a specialization of @Component, allowing for implementation classes to be autodetected through classpath scanning.
					</purpose> 
					<link>http://docs.spring.io/autorepo/docs/spring-framework/3.0.x/javadoc-api/org/springframework/stereotype/Service.html</link>
				</annotation>
				<annotation>
					<name>@Repository</name>
					<purpose>This is the Persistence layer(Data Access Layer) of application which is used to get data from database. i.e. all the Database related operations are done by repository.
					</purpose>
				</annotation>
				<annotation>
					<name>@Component</name>
					<purpose>Annotate your other components that are not @Repository, @Service or @Controller (for example REST resource classes) with component stereotype.
					</purpose>
				</annotation>
				<annotation>
					<name>@Controller</name>
					<purpose>
					</purpose>
				</annotation>
				<annotation>
					<name>@RestController</name>
					<purpose> @RestController tells Spring MVC to write the text directly into the HTTP response body, because there aren't any views. Instead, when you visit the page, you’ll get a simple message in the browser.
The @RestController needs a function with the @RequestMapping annotation, the return value of that function will be the message that is displayed in the browser when you navigate to the value defined by @RequestMapping.
To use views, such as specific html files and related, one cannot use @RestController and should use @Controller instead.
					</purpose>
				</annotation>
				<annotation>
					<name>@ComponentScan</name>
					<purpose>This tells Spring to look for other components, configurations, and services in the package (example: the "is.siminn.internet" package.)
					</purpose>
				</annotation>
				<annotation>
					<name>@Bean</name>
					<purpose>
					</purpose>
				</annotation>
				<annotation>
					<name>@Lazy</name>
					<purpose>Indicates whether a bean is to be lazily initialized.
May be used on any class directly or indirectly annotated with @Component or on methods annotated with @Bean.
If this annotation is not present on a @Component or @Bean definition, eager initialization will occur. If present and set to true, the @Bean or @Component will not be initialized until referenced by another bean or explicitly retrieved from the enclosing BeanFactory. If present and set to false, the bean will be instantiated on startup by bean factories that perform eager initialization of singletons.
If Lazy is present on a @Configuration class, this indicates that all @Bean methods within that @Configuration should be lazily initialized. If @Lazy is present and false on a @Bean method within a @Lazy-annotated @Configuration class, this indicates overriding the 'default lazy' behavior and that the bean should be eagerly initialized.
In addition to its role for component initialization, this annotation may also be placed on injection points marked with Autowired or Inject: In that context, it leads to the creation of a lazy-resolution proxy for all affected dependencies, as an alternative to using ObjectFactory or Provider.
					</purpose>
					<link>http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/annotation/Lazy.html</link>
				</annotation>
				<annotation>
					<name>@Resource</name>
					<purpose>
					</purpose>
				</annotation>
				<annotation>
					<name>@RequestMapping</name>
					<purpose>
					</purpose>
				</annotation>
				<annotation>
					<name>@Profile</name>
					<purpose>
					</purpose>
					<link>http://docs.spring.io/spring/docs/4.2.1.RELEASE/javadoc-api/org/springframework/context/annotation/Profile.html</link>
				</annotation>
			</annotations>
			<dependency_injection>
				<beans>
				</beans>
				<application_context>
				</application_context>
			</dependency_injection>
		</notes>
		<links>
			<link>
				<description></description>
				<url>http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/htmlsingle/#beans-constructor-injection</url>
			</link>
			
			<link>
				<description></description>
				<url>http://docs.spring.io/spring/docs/4.2.6.RELEASE/spring-framework-reference/html/beans.html#beans-java-basic-concepts</url>
			</link>
			<link>
				<description></description>
				<url>http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/ </url>
			</link>
			<link>
				<description></description>
				<url>http://websystique.com/springmvc/spring-4-mvc-angularjs-routing-example-using-ui-router/</url>
			</link>
			<link>
				<description></description>
				<url>https://spring.io/blog/2011/01/04/green-beans-getting-started-with-spring-mvc/</url>
			</link>
			<link>
				<description>A step by step guide for creating a MVC project using spring, very useful for seeing the correct structure of a spring project.</description>
				<url>https://docs.spring.io/docs/Spring-MVC-step-by-step/part1.html</url>
			</link>
		</links>
	</spring>
	<hdm>
		<notes>
			<nbi_notifications>
				<definition>WHAT THE FUCK IS AN NBI NOTIFICATION?</definition>
				<notification>
					<name>NBIDeviceActionResult</name>
					<purpose>The HDMProgramming guide descibes NBIOperationResults thusly: Contains the status of an action in any policy (transient, instant-triggered, event-triggered) or in an NBI-initiated operation, either of which do not have a responseDTO."</purpose>
				</notification>
				<notification>
					<name>NBIOperationResult</name>
					<purpose>The HDMProgramming guide descibes NBIOperationResults thusly: "Contains the result for all single-device operations from NBI or UI(?). For "getter" operations, this DTO contains the responseDTO that was returned from the (custom) function."</purpose>
				</notification>
				<notification>
					<name>NBIDeviceInformEvent</name>
					<purpose>NBIDeviceInformEvent DTOs (Data Transfer Objects) are sent by HDM every time a single inform is sent to HDM by a CPE that can authenticate and start a TR-069 session. These objects represent so called "raw device events" and contain all the CPE information that is contained in the TR-069 inform RPC (Remote Procedure Call).</purpose>
				</notification>
				<notification>
					<name>NBIDeviceRegistrationNotification</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIBulkOperationResult</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIEventTriggeredPolicyResult</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIDeviceActivationNotification</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIUnknownGatewayEvent</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIUnMatchingHttpUsernameEvent</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIDeviceReplacementEvent</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIUnpermittedDeviceReplacementEvent</name>
					<purpose></purpose>
				</notification>
				<notification>
					<name>NBIInitiateConnectionResult</name>
					<purpose></purpose>
				</notification>
			</nbi_notifications>
			<links>
				<link>
					<description>Seems to be a complete list of all of the values you can get from the router. RSSI, packets, hostnames, everything the TR-069 standard has to offer in regards to information from the router.</description>
					<url>https://www.broadband-forum.org/cwmp/tr-069-1-0-0.html</url>
				</link>
			</links>
		</notes>
	</hdm>
	<technical_reports>
		<tr-069>
			<notes>
				<description>TR-069 is often known as the "CPE WAN Management Protocol" (CWMP).</description>
				<remote_procedure_calls>
					<definition></definition>
					<rpc_list>
						<rpc>
							<name>GetParameterValues</name>
							<description></description>
						</rpc>
						<rpc>
							<name>SetParameterValues</name>
							<description></description>
						</rpc>
						<rpc>
							<name>GetParameterAttributes</name>
							<description></description>
						</rpc>
						<rpc>
							<name>SetParameterAttributes</name>
							<description></description>
						</rpc>
						<rpc>
							<name>GetParameterNames</name>
							<description></description>
						</rpc>
						<rpc>
							<name>GetRPCMethods</name>
							<description></description>
						</rpc>
						<rpc>
							<name>AddObject</name>
							<description></description>
						</rpc>
						<rpc>
							<name>DeleteObject</name>
							<description></description>
						</rpc>
						<rpc>
							<name>Reboot</name>
							<description></description>
						</rpc>
						<rpc>
							<name>Download</name>
							<description></description>
						</rpc>
					</rpc_list>
					<inform_events>
						<description>...These are all of the standardized TR-069 events. Vendors can define their own using vendor extensions...</description>
						<events>
							<event>
								<name>0 BOOTSTRAP</name>
								<description></description>
							</event>
							<event>
								<name>1 BOOT</name>
								<description>Sent by the CPE when its software is restarted, which usually indicates that the router was rebooted. This is not the same as the BOOTSTRAP message, which indicates that the router is being connected to the ACS for the very first time.</description>
							</event>
							<event>
								<name>2 PERIODIC</name>
								<description></description>
							</event>
							<event>
								<name>3 SCHEDULED</name>
								<description></description>
							</event>
							<event>
								<name>4 VALUE CHANGE</name>
								<description></description>
							</event>
							<event>
								<name>6 CONNECTION REQUEST</name>
								<description></description>
							</event>
							<event>
								<name>7 TRANSFER COMPLETE and ANONYMOUS TRANSFER COMPLETE</name>
								<description></description>
							</event>
							<event>
								<name>8 DIAGNOSTICS COMPLETE</name>
								<description></description>
							</event>
							<event>
								<name>9 REQUEST DOWNLOAD</name>
								<description></description>
							</event>
							<event>
								<name>11 DU STATE CHANGE COMPLETE, 12 AUTONOMOUS DU STATE CHANGE COMPLETE</name>
								<description></description>
							</event>
							<event>
								<name>13 WAKEUP</name>
								<description></description>
							</event>
							<method_events>
								<description></description>
								<event>
									<name>M Reboot</name>
									<description></description>
								</event>
								<event>
									<name>M Scheduled Inform</name>
									<description></description>
								</event>
								<event>
									<name>M Download</name>
									<description></description>
								</event>
								<event>
									<name>M ChangeDUState</name>
									<description></description>
								</event>
							</method_events>
						</events>
						<links>
							<link>
								<description>A trining site that lists up all of the event code types (like 0 BOOTSTRAP) and gives a description of what they do.</description>
								<url>http://www.qacafe.com/knowledgebase/tr-069-event-basics/</url>
							</link>
						</links>
						<images>
							<image>C:\Users\aronh\Dropbox\glosur\images</image>
						</images>
					</inform_events>
				</remote_procedure_calls>
			</notes>
			<links>
				<link>
					<description>A pdf form of the entire TR-069 report.</description>
					<url>https://www.broadband-forum.org/technical/download/TR-069_Amendment-5.pdf</url>
				</link>
				<link>
					<description>A training series in the TR-069 report. It covers a couple of topics on the report and has reading material aswell as viedos to explain the various concepts behind TR-069.</description>
					<url>http://www.qacafe.com/knowledgebase/tr-069-training-series/</url>
				</link>
				<link>
					<description>A slideshow called "TR-069 - A Crash Course". It has useful information regarding TR-069, explained in a relatively simple way.</description>
					<url>https://www.iol.unh.edu/sites/default/files/knowledgebase/hnc/TR-069_Crash_Course.pdf</url>
				</link>
			</links>
		</tr-069>
		<tr-098>
			<notes>
				<description>TR-098 defines the Internet Gateway Device data model for the CPE WAN Management Protocol (TR-069).</description>
				<internetgatewaydevice>The Internet Gateway Device data model is very important. WHY???????????????</internetgatewaydevice>
			</notes>
			<links>
				<link>
					<description>A pdf form of the entire TR-098 report.</description>
					<url>https://www.broadband-forum.org/technical/download/TR-098_Amendment-2.pdf</url>
				</link>
			</links>
		</tr-098>
		<tr-106>
			<links>
				<link>
					<description>A pdf form of the entire TR-106 report.</description>
					<url>https://www.broadband-forum.org/technical/download/TR-106_Amendment-3.pdf</url>
				</link>
			</links>
		</tr-106>
		<tr-143>
			<notes>
				<description>TR-143 revolves around using tools in TR-069 with new stuff from TR-143 to allow ISP's (like Síminn) to perform tests on the TR-069 complaint devices (like a customer's router). These tests center around improving the QoS (Quality of Service) for the routers so that problems with things like throughput will be immediately apparent, or at least easy to test for. TR-143 defines something called "Active Monitoring test suite" which is supposed to achieve this purpose of easily testable and monitored TR-069 devices.</description>
				<quality_of_service>Quality of Service (QoS) is defined as "The ability to provide different priority to different applications, users, or data flows, or to guarantee a certain level of performance to a data flow."</quality_of_service>
			</notes>
			<links>
				<link>
					<description>A pdf form of the entire TR-143 report.</description>
					<url>https://www.broadband-forum.org/technical/download/TR-143.pdf</url>
				</link>
			</links>
		</tr-143>
		<tr-181></tr-181>
	</technical_reports>
	<python>
		<general>
			<notes>
				<links>
					<link>
						<description>Stack overflow answer that has a very good description on the ideal structure of a Python project.</description>
						<url>http://stackoverflow.com/questions/193161/what-is-the-best-project-structure-for-a-python-application</url>
					</link>
					<link>
						<description>A detailed explanation on how to structure a Python project.</description>
						<url>http://docs.python-guide.org/en/latest/writing/structure/</url>
					</link>
					<link>
						<description>A stack overflow answer that explains what the "__init__" function and "self" variable represent in Python.</description>
						<url>http://stackoverflow.com/questions/625083/python-init-and-self-what-do-they-do</url>
					</link>
					<link>
						<description>A description on how to properly document python code.</description>
						<url>http://docs.python-guide.org/en/latest/writing/documentation/</url>
					</link>
					<link>
						<description>A PEP style guide (pep-0257) detailing some specifics around how to document python code according to the PEP standards.</description>
						<url>https://www.python.org/dev/peps/pep-0257/#specification</url>
					</link>
				</links>
			</notes>
		</general>
		<xml>
			<notes>
			</notes>
			<links>
				<link>
					<description></description>
					<url>https://docs.python.org/3.5/library/xml.etree.elementtree.html</url>
				</link>
			</links>
		</xml>
		<postgresql>
			<notes></notes>
			<links>
				<link>
					<description>The home page for Psycopg. Which is used to connect python with a PostgreSQL database.</description>
					<url>http://initd.org/psycopg/</url>
				</link>
				<link>
					<description>The basics for connecting to a PostgreSQL database with Python using Psycopg.</description>
					<url>http://initd.org/psycopg/docs/usage.html</url>
				</link>
				<link>
					<description>Shows how to query a MySQL database. There seems to be no difference between using MySQL and PostgreSQL with python.</description>
					<url>https://dev.mysql.com/doc/connector-python/en/connector-python-example-cursor-select.html</url>
				</link>
			</links>
		</postgresql>
		<django>
			<notes>
				<wsgi>
					<link>
						<description></description>
						<url>https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface</url>
					</link>
				</wsgi>
				<links>
					<link>
						<description>An intro tutorial for programming using the Django framework.</description>
						<url>https://docs.djangoproject.com/en/1.10/intro/tutorial01/</url>
					</link>
				</links>
			</notes>
		</django>
		<threading>
			<links>
				<link>
					<description>The official python documentation for the threading library.</description>
					<url>https://docs.python.org/3/library/threading.html</url>
				</link>
				<link>
					<description>A detailed and dummy-proof tutorial on threading in python.</description>
					<url>https://www.tutorialspoint.com/python/python_multithreading.htm</url>
				</link>
				<link>
					<description>A python tutorial on managing concurrent threads.</description>
					<url>https://pymotw.com/2/threading/</url>
				</link>
			</links>
		</threading>
	</python>
	<sql>
		<notes>
			<links>
				<link>
					<description>Useful example on how to join tables in sql.</description>
					<url>http://stackoverflow.com/questions/12475850/how-can-an-sql-query-return-data-from-multiple-tables</url>
				</link>
				<link>
					<description>Examples for connecting and using a postgres database in java.</description>
					<url>https://jdbc.postgresql.org/documentation/93/query.html</url>
				</link>
				<link>
					<description>Shows various ways to query a database using a jdbctemplate.</description>
					<url>http://docs.spring.io/spring/docs/current/spring-framework-reference/html/jdbc.html</url>
				</link>
			</links>
		</notes>
	</sql>
	<elastic>
		<elasticsearch>
			<notes>
				<links>
					<link>
						<description>The getting started basic documentation for ElasticSearch</description>
						<url>https://www.elastic.co/guide/en/elasticsearch/reference/current/_basic_concepts.html</url>
					</link>
					<link>
						<description>Install guide for ElasticSearch.</description>
						<url>https://www.elastic.co/guide/en/elasticsearch/reference/current/_installation.html</url>
					</link>
				</links>
			</notes>
		</elasticsearch>
		<logstash>
			<notes>
				<links>
					<link>
						<description>Tutorial for showing how to use logstash to connect to an SQL database and change the SQL query into a JSON format that can be inputted into ElasticSearch.</description>
						<url>https://www.elastic.co/blog/logstash-jdbc-input-plugin</url>
					</link>
					<link>
						<description>Stack Overflow answer that shows how to get logstash working in Windows.</description>
						<url>http://stackoverflow.com/questions/30537548/how-to-install-logstash-on-windows-7</url>
					</link>
				</links>
			</notes>
		</logstash>
		<kibana>
			<notes>
				<links>
					<link>
						<description> A guide to setting up Kibana.</description>
						<url>https://www.elastic.co/guide/en/kibana/current/setup.html</url>
					</link>
				</links>
			</notes>
		</kibana>
	</elastic>
	<rssi>
		<notes>
			<links>
				<link>
					<description>Wikipedia article explaining RSSI (Received Signal Strength Indication).</description>
					<url>https://en.wikipedia.org/wiki/Received_signal_strength_indication</url>
				</link>
				<link>
					<description>Wikipedia article detailing some equations for calculating the signal strength of cellphone signals based on signal power and distance.</description>
					<url>https://en.wikipedia.org/wiki/Signal_strength_in_telecommunications</url>
				</link>
				<link>
					<description>An article that explains why RSSI is a poor choice to use to find out the position of a device, from the router.</description>
					<url>http://www.cse.buffalo.edu/srds2009/F2DA/f2da09_RSSI_Parameswaran.pdf</url>
				</link>
				<link>
					<description>An explanation on how RSSI relates to signal quality (percent).</description>
					<url>http://www.speedguide.net/faq/how-does-rssi-dbm-relate-to-signal-quality-percent-439</url>
				</link>
				<link>
					<description>A short explanation on what RSSI actually is.</description>
					<url>http://www.metageek.com/training/resources/understanding-rssi.html</url>
				</link>
			</links>
		</notes>
	</rssi>
	<linux>
		<notes>
			<tomcat>
				<links>
					<link>
						<description>A guide for setting up a Tomcat server on a linux system.</description>
						<url>https://www.mulesoft.com/tcat/tomcat-linux</url>
					</link>
					<link>
						<description>A guide for installing Java on linux.</description>
						<url>https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04</url>
					</link>
					<link>
						<description>How to make the Tomcat startup faster.</description>
						<url>https://wiki.apache.org/tomcat/HowTo/FasterStartUp</url>
					</link>
					<link>
						<description>A description on how to make tomcat faster if it is slowing down because of SecureRandom problems.</description>
						<url>http://stackoverflow.com/questions/7554831/faster-random-generator-in-tomcat-7</url>
					</link>
				</links>
			</tomcat>
			<postgresql>
				<links>
					<link>
						<description>How to set up a Postgres database on Ubuntu and some basic, helpful commands.</description>
						<url>https://help.ubuntu.com/community/PostgreSQL</url>
					</link>
					<link>
						<description>Another guide for setting up Postgres database on Ubuntu.</description>
						<url>https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04</url>
					</link>
				</links>
			</postgresql>
			<general>
				<links>
					<link>
						<description>How to make basic scripts on linux.</description>
						<url>https://help.ubuntu.com/community/Beginners/BashScripting</url>
					</link>
				</links>
			</general>
		</notes>
	</linux>
	<zabbix>
		<notes></notes>
		<links>
			<link>
				<description>The main page of the Zabbix documentation for version 3.0 of Zabbix.</description>
				<url>https://www.zabbix.com/documentation/3.0/manual</url>
			</link>
			<link>
				<description>A guide for monitoring log files in Zabbix, using Zabbix version 3.0.</description>
				<url>https://www.zabbix.com/documentation/3.0/manual/config/items/itemtypes/log_items</url>
			</link>
			<link>
				<description>Guides for monitoring 2 real life websites. Shows you how to use Zabbix to monitor webpages.</description>
				<url>https://www.zabbix.com/documentation/3.0/manual/web_monitoring/example</url>
			</link>
		</links>
	</zabbix>
	<nodejs>
		<notes></notes>
		<links>
			<link>
				<description>The homepage of Node.js</description>
				<url>https://nodejs.org/en/</url>
			</link>
			<link>
				<description>A guide for showing Node.js HTTP handling. The guide goes through how to create a server in Node.js among other useful information.</description>
				<url>https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/</url>
			</link>
		</links>
	</nodejs>
	<internet_of_things>
		<notes>
			<Auto_arm_disarm>
				<implementation_ideas>
					<router>
					</router>
					<app>
						<links>
							<link>
								<description>A description of the "Process Lifecycle" in android. The process lifecycle is the thing in Android which allows an app to run background processess event when the app itself is not running. An example would be the "S Health" app that always knows if I have been walking or running even though I never keep it running. This would be ideal for an auto arm/disarm feature since it would not require the user to open the app, only to have his smart device on him.</description>
								<url>https://developer.android.com/reference/android/app/Service.html#ProcessLifecycle</url>
							</link>
							<link>
								<description>A description on the android developer website on what "Geofencing" is. Geofencing allows you to define an area with gps which, if the device is inside that area or outside it, makes it possible for a deviceto trigger some functionality based on that location. This would be perfect for an auto arm/disarm feature because it allows the device to turn the security system on when the device (which is presumably on the user) leaves the geofenced area (which would presumably be the home). The system could then disarm the system when the device re-enters the geofenced area. In this way, you can monitor if anybody is home or not.</description>
								<url>https://developer.android.com/training/location/geofencing.html</url>
							</link>
						</links>
					</app>
				</implementation_ideas>
				<links>
					<link>
						<description>Canary is a security feature that seems to implement Auto-arm/disarm in their system.</description>
						<url>https://www.verizonwireless.com/accessories/canary-home-security/</url>
					</link>
					<link>
						<description>Another description of Canary's auto-arm/disarm feature.</description>
						<url>https://jonsuh.com/blog/canary-home-security-device/</url>
					</link>
					<link>
						<description>SmartThings has auto-arm/disarm capabilities, it seems to be based on geofencing.</description>
						<url>https://support.smartthings.com/hc/en-us/articles/205380154-Smart-Home-Monitor</url>
					</link>
					<link>
						<description>A tutorial for activating auto-arm/disarm in SmartThings.</description>
						<url>http://www.howtogeek.com/256392/how-to-arm-and-disarm-smartthings-automatically/</url>
					</link>
					<link>
						<description>A cool security system focusing on video surveilance.</description>
						<url>https://www.sighthound.com/</url>
					</link>
					<link>
						<description>Automation system called "IFTTT" that is not directly connected to security but could have some cool IoT features.</description>
						<url>https://ifttt.com/</url>
					</link>
				</links>
			</Auto_arm_disarm>
			<z_wave></z_wave>
		</notes>
		<links>
			<link>
				<description></description>
				<url></url>
			</link>
		</links>
	</internet_of_things>
	<mios>
		<links>
			<link>
				<description>The homepage of MiOS.</description>
				<url>http://www.mios.com/</url>
			</link>
			<link>
				<description>The MiOS forum, which is rather inaccessible from their homepage.</description>
				<url>http://forum.mios.com/</url>
			</link>
		</links>
	</mios>
	<funambol>
		<links>
			<link>
				<description></description>
				<url></url>
			</link>
		</links>
	</funambol>
	<machine_learning>
		<notes>
			<types_of_machine_learning>
				<supervised_learning></supervised_learning>
				<unsupervised_learning></unsupervised_learning>
				<reinforcement_learning></reinforcement_learning>
			</types_of_machine_learning>
		</notes>
		<links>
			<link>
				<description>A very interesting machine learning course for Python.</description>
				<url>http://www.bogotobogo.com/python/scikit-learn/scikit_machine_learning_Supervised_Learning_Unsupervised_Learning.php</url>
			</link>
		</links>
	</machine_learning>
	<app_development>
		<android>
			<siminn>
				<links>
					<link>
						<description>The Google Play developer console for Síminn. It has the Síminn apps.</description>
						<url>https://play.google.com/apps/publish/?account=6051294081154253634&amp;dev_acc=09919713447651098572#AppListPlace</url>
					</link>
					<link>
						<description>The page that MiOS uses to store apk files for the Android app.</description>
						<url>http://veramobile.mios.com/android/Siminn/SSO/</url>
					</link>
				</links>
			</siminn>
			<links>
				<link>
					<description>A detailed description for the process of submitting an app to the Google Play store.</description>
					<url>https://support.google.com/googleplay/android-developer/answer/113469?hl=en</url>
				</link>
				<link>
					<description>A Stack Overflow question and answer to how to sign an APK file on Windows without using Android Studio.</description>
					<url>http://stackoverflow.com/questions/10930331/how-to-sign-an-already-compiled-apk</url>
				</link>
				<link>
					<description>Tutorial to show how to "zipalign" your signed APK file.</description>
					<url>https://developer.android.com/studio/command-line/zipalign.html</url>
				</link>
			</links>
		</android>
		<ios>
			<siminn>
				<links>
					<link>
						<description>The iOS developer site for Síminn.</description>
						<url>https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/app</url>
					</link>
					<link>
						<description>Another site that may be necessary for the process of publishing an app on the Apple Appstore. I am not sure if this site is necessary or even what it does.</description>
						<url>https://appleid.apple.com/account/manage</url>
					</link>
					<link>
						<description>The page that MiOS uses so that people can install the iOS version of their app. This only works on an apple device and the device needs to access this link in a browser and click "install".</description>
						<url>https://veramobile.mios.com/iOS/Siminn/Release_719/</url>
					</link>
				</links>
			</siminn>
			<links>
				<link>
					<description>A detailed tutorial for the process of submitting an app to the Apple Appstore.</description>
					<url>http://clearbridgemobile.com/how-to-submit-an-app-to-the-app-store/</url>
				</link>
			</links>
		</ios>
	</app_development>
	<other>
		<notes>
			<meetings>
				<meeting>
					<name>Deildarfundur 30.11.2016</name>
					<subjects>
						1. AirTies 4k.
						2. Ráðgjafinn.
						3. 6.000 klst af efni í Sjónvarpi Símans.
						4. Prufanir á MiOS kerinu.
						5. HDM update.
						6. Fá nýja benda.
						7. HomeWare.
						8. NanoCDM - HLS.
						9. Harmonica.
						10. Spotify + Síminn (taka yfir Pepsi tv).
						11. Síminn Ský (Funambol).
						12. Openstack (Mirantis).
					</subjects>
				</meeting>
			</meetings>
			<work_environments>
				<links>
					<link>
						<description>Guides to teach you how to have development, production, deployment and other environments and what the benefits are to each one.</description>
						<url>http://guides.beanstalkapp.com/</url>
					</link>
				</links>
			</work_environments>
		</notes>
	</other>
</data>